plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.sonarqube' version '6.0.1.5171'
}

group = 'org.container.platform.api'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


repositories {
    mavenCentral()
}


configurations {
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco.xml"
    }
}

ext {
    httpcoreVersion = '4.4.6'
    gsonVersion = '2.8.9'
    lombokVersion = '1.18.30'
    jacocoVersion = '0.8.8'
    jjwtVersion = '0.9.1'
    jsonpathVersion = '2.9.0'
    springCloudVersion = '2024.0.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.apache.httpcomponents.client5:httpclient5'
    implementation"org.apache.httpcomponents:httpcore:${httpcoreVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
    implementation "com.jayway.jsonpath:json-path:${jsonpathVersion}"
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.3'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    implementation "org.springframework.cloud:spring-cloud-starter-vault-config"
    implementation 'commons-io:commons-io:2.15.1'
    testImplementation('junit:junit:4.13.1')
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'net.minidev:json-smart:2.5.2'
    implementation 'io.github.classgraph:classgraph:4.8.179'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '4.0.5'

    implementation "org.springframework.security:spring-security-web"
    implementation "org.springframework.security:spring-security-config"
}

jacoco {
    toolVersion = "${jacocoVersion}"
    reportsDirectory = file("$buildDir/jacocoReport")
}

test {
    ignoreFailures = true
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
    }
    finalizedBy("jacocoTestReport")
}

jacocoTestReport {
    reports {
        xml.required = true
        xml.destination file("build/reports/jacoco.xml")
    }
}